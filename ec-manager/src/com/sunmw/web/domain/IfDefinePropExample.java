package com.sunmw.web.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class IfDefinePropExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public IfDefinePropExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIfDefinePropIdIsNull() {
            addCriterion("If_define_prop_id is null");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdIsNotNull() {
            addCriterion("If_define_prop_id is not null");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdEqualTo(Long value) {
            addCriterion("If_define_prop_id =", value, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdNotEqualTo(Long value) {
            addCriterion("If_define_prop_id <>", value, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdGreaterThan(Long value) {
            addCriterion("If_define_prop_id >", value, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdGreaterThanOrEqualTo(Long value) {
            addCriterion("If_define_prop_id >=", value, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdLessThan(Long value) {
            addCriterion("If_define_prop_id <", value, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdLessThanOrEqualTo(Long value) {
            addCriterion("If_define_prop_id <=", value, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdIn(List<Long> values) {
            addCriterion("If_define_prop_id in", values, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdNotIn(List<Long> values) {
            addCriterion("If_define_prop_id not in", values, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdBetween(Long value1, Long value2) {
            addCriterion("If_define_prop_id between", value1, value2, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfDefinePropIdNotBetween(Long value1, Long value2) {
            addCriterion("If_define_prop_id not between", value1, value2, "ifDefinePropId");
            return (Criteria) this;
        }

        public Criteria andIfIdIsNull() {
            addCriterion("If_id is null");
            return (Criteria) this;
        }

        public Criteria andIfIdIsNotNull() {
            addCriterion("If_id is not null");
            return (Criteria) this;
        }

        public Criteria andIfIdEqualTo(Long value) {
            addCriterion("If_id =", value, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdNotEqualTo(Long value) {
            addCriterion("If_id <>", value, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdGreaterThan(Long value) {
            addCriterion("If_id >", value, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdGreaterThanOrEqualTo(Long value) {
            addCriterion("If_id >=", value, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdLessThan(Long value) {
            addCriterion("If_id <", value, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdLessThanOrEqualTo(Long value) {
            addCriterion("If_id <=", value, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdIn(List<Long> values) {
            addCriterion("If_id in", values, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdNotIn(List<Long> values) {
            addCriterion("If_id not in", values, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdBetween(Long value1, Long value2) {
            addCriterion("If_id between", value1, value2, "ifId");
            return (Criteria) this;
        }

        public Criteria andIfIdNotBetween(Long value1, Long value2) {
            addCriterion("If_id not between", value1, value2, "ifId");
            return (Criteria) this;
        }

        public Criteria andPropNameIsNull() {
            addCriterion("Prop_name is null");
            return (Criteria) this;
        }

        public Criteria andPropNameIsNotNull() {
            addCriterion("Prop_name is not null");
            return (Criteria) this;
        }

        public Criteria andPropNameEqualTo(String value) {
            addCriterion("Prop_name =", value, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameNotEqualTo(String value) {
            addCriterion("Prop_name <>", value, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameGreaterThan(String value) {
            addCriterion("Prop_name >", value, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameGreaterThanOrEqualTo(String value) {
            addCriterion("Prop_name >=", value, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameLessThan(String value) {
            addCriterion("Prop_name <", value, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameLessThanOrEqualTo(String value) {
            addCriterion("Prop_name <=", value, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameLike(String value) {
            addCriterion("Prop_name like", value, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameNotLike(String value) {
            addCriterion("Prop_name not like", value, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameIn(List<String> values) {
            addCriterion("Prop_name in", values, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameNotIn(List<String> values) {
            addCriterion("Prop_name not in", values, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameBetween(String value1, String value2) {
            addCriterion("Prop_name between", value1, value2, "propName");
            return (Criteria) this;
        }

        public Criteria andPropNameNotBetween(String value1, String value2) {
            addCriterion("Prop_name not between", value1, value2, "propName");
            return (Criteria) this;
        }

        public Criteria andPropValueIsNull() {
            addCriterion("Prop_value is null");
            return (Criteria) this;
        }

        public Criteria andPropValueIsNotNull() {
            addCriterion("Prop_value is not null");
            return (Criteria) this;
        }

        public Criteria andPropValueEqualTo(String value) {
            addCriterion("Prop_value =", value, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueNotEqualTo(String value) {
            addCriterion("Prop_value <>", value, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueGreaterThan(String value) {
            addCriterion("Prop_value >", value, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueGreaterThanOrEqualTo(String value) {
            addCriterion("Prop_value >=", value, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueLessThan(String value) {
            addCriterion("Prop_value <", value, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueLessThanOrEqualTo(String value) {
            addCriterion("Prop_value <=", value, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueLike(String value) {
            addCriterion("Prop_value like", value, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueNotLike(String value) {
            addCriterion("Prop_value not like", value, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueIn(List<String> values) {
            addCriterion("Prop_value in", values, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueNotIn(List<String> values) {
            addCriterion("Prop_value not in", values, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueBetween(String value1, String value2) {
            addCriterion("Prop_value between", value1, value2, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropValueNotBetween(String value1, String value2) {
            addCriterion("Prop_value not between", value1, value2, "propValue");
            return (Criteria) this;
        }

        public Criteria andPropOrderIsNull() {
            addCriterion("Prop_order is null");
            return (Criteria) this;
        }

        public Criteria andPropOrderIsNotNull() {
            addCriterion("Prop_order is not null");
            return (Criteria) this;
        }

        public Criteria andPropOrderEqualTo(Integer value) {
            addCriterion("Prop_order =", value, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderNotEqualTo(Integer value) {
            addCriterion("Prop_order <>", value, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderGreaterThan(Integer value) {
            addCriterion("Prop_order >", value, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("Prop_order >=", value, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderLessThan(Integer value) {
            addCriterion("Prop_order <", value, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderLessThanOrEqualTo(Integer value) {
            addCriterion("Prop_order <=", value, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderIn(List<Integer> values) {
            addCriterion("Prop_order in", values, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderNotIn(List<Integer> values) {
            addCriterion("Prop_order not in", values, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderBetween(Integer value1, Integer value2) {
            addCriterion("Prop_order between", value1, value2, "propOrder");
            return (Criteria) this;
        }

        public Criteria andPropOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("Prop_order not between", value1, value2, "propOrder");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("Remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("Remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("Remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("Remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("Remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("Remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("Remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("Remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("Remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("Remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("Remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("Remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("Remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("Remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("Status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("Status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("Status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("Status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("Status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("Status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("Status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("Status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("Status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("Status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("Status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("Status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNull() {
            addCriterion("ctime is null");
            return (Criteria) this;
        }

        public Criteria andCtimeIsNotNull() {
            addCriterion("ctime is not null");
            return (Criteria) this;
        }

        public Criteria andCtimeEqualTo(Date value) {
            addCriterion("ctime =", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotEqualTo(Date value) {
            addCriterion("ctime <>", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThan(Date value) {
            addCriterion("ctime >", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("ctime >=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThan(Date value) {
            addCriterion("ctime <", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeLessThanOrEqualTo(Date value) {
            addCriterion("ctime <=", value, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeIn(List<Date> values) {
            addCriterion("ctime in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotIn(List<Date> values) {
            addCriterion("ctime not in", values, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeBetween(Date value1, Date value2) {
            addCriterion("ctime between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andCtimeNotBetween(Date value1, Date value2) {
            addCriterion("ctime not between", value1, value2, "ctime");
            return (Criteria) this;
        }

        public Criteria andCuserIsNull() {
            addCriterion("cuser is null");
            return (Criteria) this;
        }

        public Criteria andCuserIsNotNull() {
            addCriterion("cuser is not null");
            return (Criteria) this;
        }

        public Criteria andCuserEqualTo(String value) {
            addCriterion("cuser =", value, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserNotEqualTo(String value) {
            addCriterion("cuser <>", value, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserGreaterThan(String value) {
            addCriterion("cuser >", value, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserGreaterThanOrEqualTo(String value) {
            addCriterion("cuser >=", value, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserLessThan(String value) {
            addCriterion("cuser <", value, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserLessThanOrEqualTo(String value) {
            addCriterion("cuser <=", value, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserLike(String value) {
            addCriterion("cuser like", value, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserNotLike(String value) {
            addCriterion("cuser not like", value, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserIn(List<String> values) {
            addCriterion("cuser in", values, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserNotIn(List<String> values) {
            addCriterion("cuser not in", values, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserBetween(String value1, String value2) {
            addCriterion("cuser between", value1, value2, "cuser");
            return (Criteria) this;
        }

        public Criteria andCuserNotBetween(String value1, String value2) {
            addCriterion("cuser not between", value1, value2, "cuser");
            return (Criteria) this;
        }

        public Criteria andMtimeIsNull() {
            addCriterion("mtime is null");
            return (Criteria) this;
        }

        public Criteria andMtimeIsNotNull() {
            addCriterion("mtime is not null");
            return (Criteria) this;
        }

        public Criteria andMtimeEqualTo(Date value) {
            addCriterion("mtime =", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotEqualTo(Date value) {
            addCriterion("mtime <>", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeGreaterThan(Date value) {
            addCriterion("mtime >", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("mtime >=", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeLessThan(Date value) {
            addCriterion("mtime <", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeLessThanOrEqualTo(Date value) {
            addCriterion("mtime <=", value, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeIn(List<Date> values) {
            addCriterion("mtime in", values, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotIn(List<Date> values) {
            addCriterion("mtime not in", values, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeBetween(Date value1, Date value2) {
            addCriterion("mtime between", value1, value2, "mtime");
            return (Criteria) this;
        }

        public Criteria andMtimeNotBetween(Date value1, Date value2) {
            addCriterion("mtime not between", value1, value2, "mtime");
            return (Criteria) this;
        }

        public Criteria andMuserIsNull() {
            addCriterion("muser is null");
            return (Criteria) this;
        }

        public Criteria andMuserIsNotNull() {
            addCriterion("muser is not null");
            return (Criteria) this;
        }

        public Criteria andMuserEqualTo(String value) {
            addCriterion("muser =", value, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserNotEqualTo(String value) {
            addCriterion("muser <>", value, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserGreaterThan(String value) {
            addCriterion("muser >", value, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserGreaterThanOrEqualTo(String value) {
            addCriterion("muser >=", value, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserLessThan(String value) {
            addCriterion("muser <", value, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserLessThanOrEqualTo(String value) {
            addCriterion("muser <=", value, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserLike(String value) {
            addCriterion("muser like", value, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserNotLike(String value) {
            addCriterion("muser not like", value, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserIn(List<String> values) {
            addCriterion("muser in", values, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserNotIn(List<String> values) {
            addCriterion("muser not in", values, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserBetween(String value1, String value2) {
            addCriterion("muser between", value1, value2, "muser");
            return (Criteria) this;
        }

        public Criteria andMuserNotBetween(String value1, String value2) {
            addCriterion("muser not between", value1, value2, "muser");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table if_define_prop
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table if_define_prop
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}